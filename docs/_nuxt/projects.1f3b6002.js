import{a as f,e as h,f as e,t as d,l as g,h as m,m as y,o as c,i as a,w as o,k as t,u as s,j as _}from"./entry.56092b05.js";import{_ as n}from"./nitroguy.c7d8a262.js";const b=["id"],w=e("hr",{class:"mb-8"},null,-1),k={class:"font-bold text-3xl mb-5"},v=["href"],I={class:"mb-0"},S={key:0,class:"mb-0"},T={key:1,class:"mb-0"},H={key:0},j=["src","alt"],C={key:1},x=["src","alt"],J={class:"mb-7"},A=f({__name:"Entry",props:{title:null,timeframe:null,languages:null,technologies:null,imageLink:null,imageAlt:null,image2Link:null,image2Alt:null},setup(u){const r=u;return(p,l)=>(c(),h("div",{id:u.title,class:"ProjectsEntry"},[w,e("h3",k,[e("a",{href:"#"+u.title,class:"no-underline hover:cursor-pointer"},d(r.title),9,v)]),e("div",{class:g("grid grid-cols-1 text-xl text-zinc-400 mb-5 "+(r.image2Link?"sm:grid-cols-3 ":"sm:grid-cols-2 "))},[e("div",{class:g(u.imageLink?"":"col-span-2")},[e("p",I,d(r.timeframe),1),r.languages?(c(),h("p",S,d(r.languages),1)):m("",!0),r.technologies?(c(),h("p",T,d(r.technologies),1)):m("",!0)],2),r.imageLink?(c(),h("div",H,[e("img",{src:r.imageLink,alt:r.imageAlt},null,8,j)])):m("",!0),r.image2Link?(c(),h("div",C,[e("img",{src:r.image2Link,alt:r.image2Alt},null,8,x)])):m("",!0)],2),e("div",J,[y(p.$slots,"default")])],8,b))}});const P={id:"projects"},L=e("h2",{class:"font-semibold text-3xl"},"A List of Some of My Projects With Informal Commentary",-1),G=e("p",null,"Hello! This is a list of some of my programming projects in roughly chronological order. This includes software, plugins, web apps, microcontroller projects, et cetera. Let me know if you have questions about anything and hope you enjoy!",-1),R=e("p",null,"It's a website! It's made with Vue and Nuxt! And Tailwind! Yaaay!!!",-1),M=e("p",null,"Um, I mean this iteration of my website is meant to be a more cohesive and clean construction than my previous one. It utilizes Vue to replace the template rendering from my previous website, and Nuxt makes it all static with practically zero JavaScript in the final build!",-1),E=e("p",null,"This project would not have been possible without my amazing friends Anish, Lizzy, and Kat! I did the coding and music, Anish did the story and level design, Lizzy and Kat did the art and animations, and we all worked on the concept together. The game is made in the Godot Engine and is playable online at the link below. Give it a try!",-1),D={class:"project-link"},O={class:"project-link"},z={class:"project-link"},N=e("p",null,"Many years ago, I wrote some Windows Batch scripts that let me drag and drop files onto the scripts to have them automatically convert audio files to the format I want and the bitrate I want. Since then, I've found that I sometimes need some more fine-tuned control over the conversions. Xylem is my attempt to attain that without sacrificing simplicity and ease-of-use.",-1),W={class:"project-link"},F=e("p",null,"This might be the largest-scale project I've worked on thus far! It was made in a team 3 for use at TAMUhack hackathons. It was first deployed at HowdyHack 2022 on 1-2 October 2022 for use by 200+ hackers, and it worked amazingly with practically no hitches! Sorry for all the exclamation marks... I'm really excited about this one if you can't tell :D",-1),V=e("p",null,"I was completely responsible for writing the backend for this app. I created a robust REST API with Express and used a PostgreSQL database to store users and tickets. I didn't make the frontend but, in case you were wondering, it's made using React, Next.js, and TailwindCSS. This project took months of development but it definitely paid off!",-1),U={class:"project-link"},q={class:"project-link"},$=e("p",null,'Compara2r (pronounced "comparator") is a web app which you can use to find out the best thing among a dataset through 1-vs-1 comparisons. Users are shown a random comparison and are prompted to vote on which item they think is better. Users can vote as many times as they want and can also flag inappropriate items. Server admins can download the results and find out once and for all the best ...whatever... of all time.',-1),B=e("p",null,"This was the first time I ever created a full-stack web app from scratch all by myself! It was super fun and I learned lot about creating backend servers, using databases, and deployment. Speaking of, I actually deployed Compara2r on Heroku using a free dyno which doesn't exist anymore because, sadly but understandably, Heroku are not offering their services for free anymore. Also TailwindCSS is awesome.",-1),Q={class:"project-link"},Y={class:"project-link"},X=e("p",null,'I sat thinking hard and long about my life and my future. Finally, I came to a realization: "Hm, I should probably make something with a database." And overthere was born.',-1),K={class:"project-link"},Z=e("p",null,'This one actually has a story. I was sitting in class with my roommate and he was playing Super Hexagon on his phone. I watched him play for a while and then said, "I bet I could make that". So that night I did. We both had just taken a math test and while any normal person would have been relaxing, I was coding for fun like a weirdo. I finished the MVP that night and was completely done two days later!',-1),ee=e("p",null,"I find it kind of ridiculous that I was able to make this in such a short amount of time. Though, this same phenomenon crops up a lot when writing music for me (and many others I'm sure). You could spend months and years on something and never quite get it the way you want it, but then one day you get inspired, start something new, and completely finish it in a day or two. That was not supposed to rhyme.",-1),te={class:"project-link"},ae=e("p",null,"Another short and sweet one. Peekaboo lets you take screenshots from the terminal using Java's Robot class. That is all.",-1),oe={class:"project-link"},ie=e("p",null,[t("When I first started using MAGIX VEGAS Pro 18, I found it generally very advanced and feature rich, but at the same time lacking in certain effects that are standard in most editing software I've used. When I found out how easy it was to make plugins for VEGAS, I kind of got a little obsessed and made a whole bunch of 'em! This actually was my first time ever making plugins and while there is hardly any information or tutorials online on how to make VEGAS plugins, I must say the API and docs- er... "),e("em",null,"doc"),t(" is quite good. Mostly.")],-1),se=e("p",null,"This was also my first time working with C# outside of Unity and I quite like it. It also helps that it was really easy to pick up since its syntax is exceptionally similar to Java except for the Capitalization Of Everything. Working with Windows Forms was also very fun. There's something I can't really explain about the look of those default Windows dialog boxes that's somewhat nostalgic and just generally cool to work with; I get that same feeling with Java's Swing using the default look-and-feel. I don't know what it is. Maybe I'm just weird like that. I definitely envision myself using C# for something else in the future.",-1),ne=e("p",null,'I guess I should talk about the actual plugins, huh? Well there are a couple of really simple ones like one that selects everything after the playhead and one that adds a VEGAS Picture In Picture effect to everything (because yes, I wanted a script for that). The big and complex ones include a "screen shake" effect, a super janky "chromatic aberration" effect, and a plugin that can animate any parameter of a video effect based on an oscillator, random number generator, or noise.',-1),le={class:"project-link"},re=e("p",null,"Imagine doing web development for over 5 years without touching React or Vue anything like that, right guys? Heh heh heh (that was me). I did this big restructuring of my website in 2020 that used Jinja templates for all the pages! It was a pretty interesting learning process and it felt like a pretty clean solution... at the time. Either way, it was a very fun and enlightening project\u2014so much so that I wrote a whole article about it back when I did it. Check it out!",-1),he={class:"project-link"},ce=e("p",null,"ERS-OL (Egyptian Rat Screw Online) is an online multiplayer web game version of my favorite card game, Egyptian Rat Screw. The game isn't actually being hosted anywhere right now so if you want to play it, you'd have to clone the repository and run the server yourself. It uses Python for the server and, unsurprisingly, JavaScript for the client.",-1),ue=e("p",null,"At the time, I was super proud of this project. I had never come close to doing a project involving networking at this scale or even at all. It took me an unprecedented amount of time and effort to complete it and I was very happy with the final product... if it weren't for the ping.",-1),de=e("p",null,"*sigh* yeah... in practice this game is rather unplayable over the internet because the ping gives the host a massive advantage. Actually, this game runs quite well if played over LAN, but if you're able to play this over LAN, THEN WHY NOT JUST PLAY THE ACTUAL CARD GAME AHAHHAHAHAH.",-1),me=e("p",null,"Despite all that, I'm really happy I was able to finish this project. At the very least, it reassured me that game development is not the career path for me :P",-1),pe={class:"project-link"},ge=e("p",null,`ColorSplitter takes an input folder of images and isolates certain colors from that image (generating "whitemasks") and outputs them into a folder. I originally made it in Processing but then I realized I only used like 2 things from Processing so I remade it in pure Java. I'm not entirely sure what the applications for this are lol. I actually made this upon request from one of my friends. He needed a program that generated whitemasks for his game sprites or something so that program I did make.`,-1),fe={class:"project-link"},ye=e("p",null,`DocLCD is a "word processor" of sorts for 20x4 character LCDs with I2C drivers. It's controlled by a Python program running on a Raspberry Pi which talks via serial to an Arduino program. The Arduino program then controls the character LCD through the LCD's I2C driver. The Python program accepts keyboard input and allows you type characters and traverse around the LCD screen.`,-1),_e={class:"project-link"},be=e("p",null,[t(`I needed TimeRefresher for one very specific thing. "Press F5 at a certain time". Yep, that's it. I lovejust making programs to solve these tiny little inconveniences. Knowing how to code really `),e("em",null,"is"),t(" likehaving superpowers.")],-1),we={class:"project-link"},ke={class:"project-link"},ve={class:"project-link"},Ie=e("p",null,"A sweet and simple file hosting service.",-1),Se={class:"project-link"},Te=e("p",null,"A text storage server for you and all your friends. It's Pastebin basically.",-1),He={class:"project-link"},je=e("p",null,[t("Pi555 was my first Computer Engineering, microcontroller-type project thing and boy oh boy did I bite off more than I could chew with this one. Though intimidating, I was able to finish this project and I used to consider it my "),e("em",null,"magnum opus"),t(". It is VERY cool, trust me.")],-1),Ce=e("em",null,"show",-1),xe=e("p",null,`As if I hadn't already had my work cut out for me, knowing hardly anything about Computer Engineering stuff,I wanted to be able to use MIDI files as the source for the music. What all of this ultimately resulted inwas a Java program (probably should've used Python though) that read through a MIDI file and translated itinto something that the "music player" Java program could use. This "music player" program (which ran on aRaspberry PI) played the correct notes at the correct times on the 555 timer by sending bytes to the digitalpotentiometer through its GPIO pins.`,-1),Je=e("p",null,"And... yeah. It worked. And it was awesome. I really wish I had something else to show you here. Sorry!",-1),Ae=e("p",null,"Let's go straight from awesome and complex back to simple and ridiculous. Ever wanted to hear an annoying click sound every time you press a key? No? Too bad; ClickType. Now you can experience the cacophony of blue mechanical keyboard switches at no cost to you!",-1),Pe={class:"project-link"},Le={class:"project-link"},Ge=e("p",null,"Tired of memorizing vulgar acronyms to help you read the resistance values of resistors from the colored stripes? Or maybe you're just too lazy to learn them at all? Just input the colors into this tool and be enlightened.",-1),Re={class:"project-link"},Me={class:"project-link"},Ee=e("p",null,"Tired of memorizing vulgar acronyms to help you read the resistance values of resistors from the colored stripes? Or maybe you're just too lazy to learn them at all? Just input the colors into this tool and be enlightened.",-1),De={class:"project-link"},Oe=e("p",null,'Memories, memories. Jumpy is a game I "made" by half following a tutorial and half doing my own thing. I was a rather unexperienced but quickly-learning programmer at the time and I remember being so happy when I made a nested for-loop that read through the 2D arrays that stored the levels. I showed this game to a bunch of people at school and it was so awesome to see them all play it and subsequently rage at how hard it was. To this day I still have the list on my phone that contains the names of the people I knew who beat Jumpy. All 13 of them.',-1),ze=e("p",null,`The game itself is a pretty basic HTML5 canvas web game. It's a typical 2D platformer with positively asinine level design. The difficulty curve is outta wack. What's funny is that whenever I found a bug with the physics, instead of fixing it, I designed levels that used that bug. The epitome of "it's not a bug, it's a feature". There's also a level creator, which is pretty awesome.`,-1),Ne=e("p",null,"P.S. If you're one of my friends from school and you came to my website just to look for Jumpy, you found it! Congrats and welcome home! :)",-1),We={class:"project-link"},Fe={class:"project-link"},Ve=e("p",null,`And by the way, can we talk about what a horrible name "Dodge3" is? It sounds like it's the third entry in the "Dodge" series but nope. It's called that because there are 3 positions you can move to. How fun.`,-1),Ue={class:"project-link"},qe={class:"project-link"},$e={class:"project-link"},Be={class:"project-link"},Xe=f({__name:"projects",setup(u){return(r,p)=>{const l=A,i=_;return c(),h("div",P,[L,G,a(l,{title:"My Website",timeframe:"3 January 2023 - Ongoing",languages:"HTML, TypeScript",technologies:"Vue, Nuxt, TailwindCSS"},{default:o(()=>[R,M]),_:1}),a(l,{title:"Heart2Heart",timeframe:"24 February 2023 - Ongoing",languages:"Godot/GDScript","image-link":"/images/projects/titlescreen.gif","image-alt":"The Heart2Heart Title Screen"},{default:o(()=>[e("p",null,[t("Heart2Heart is a game made for the 48-hour "),a(i,{to:"https://itch.io/jam/chillennium-2023"},{default:o(()=>[t("Chillennium 2023 Game Jam")]),_:1}),t(". It's a cutsey puzzle-platformer where you control two characters and gain abilities by touching certain words, giving your characters emotions. It was super fun to make and it won Best In Originality at the game jam!")]),E,e("p",D,[a(i,{to:s(n).socials.website.link+"/Heart2Heart"},{default:o(()=>[t("Heart2Heart")]),_:1},8,["to"])]),e("p",O,[a(i,{to:s(n).socials.github.link+"/Chillennium2023"},{default:o(()=>[t("Heart2Heart (source) on GitHub")]),_:1},8,["to"])]),e("p",z,[a(i,{to:s(n).socials.github.link+"/Heart2Heart"},{default:o(()=>[t("Heart2Heart (hosting repo) on GitHub")]),_:1},8,["to"])])]),_:1}),a(l,{title:"Xylem",timeframe:"4 February 2023 - 5 February 2023",languages:"Python, Registry Editor",technologies:"FFmpeg"},{default:o(()=>[e("p",null,[t("Xylem is yet another iteration entry in my longstanding tradition of making frontends to "),a(i,{to:"https://ffmpeg.org/"},{default:o(()=>[t("FFmpeg")]),_:1}),t(" that make it even more simple and convenient to use than it already is. Since I work with audio and video a lot, FFmpeg is extremely valuable to me and I am soooo thankful that it exists.")]),N,e("p",null,[t("More specicially, it's a Python CLI tool that's super customizable and supports many ways to invoke it, like drag-and-drop (on Windows), stdout, and args. I even did some Registry Editor scripting to get it appear in Windows right-click menus! The GitHub repo's "),a(i,{to:s(n).socials.github.link+"/Xylem#readme"},{default:o(()=>[t("README")]),_:1},8,["to"]),t(" does a much better job of explaining everything so go check it out!")]),e("p",W,[a(i,{to:s(n).socials.github.link+"/Xylem"},{default:o(()=>[t("Xylem on GitHub")]),_:1},8,["to"])])]),_:1}),a(l,{title:"HelpR 1.0",timeframe:"22 January 2022 - 1 October 2022",languages:"HTML, CSS, JavaScript",technologies:"Node.js, Express, PostgreSQL, TypeORM, Socket.io, React, Next.js, TailwindCSS","image-link":"/images/projects/helpr.png","image-alt":"The HelpR landing page"},{default:o(()=>[e("p",null,[t("HelpR is a web app where hackathon participants can submit help tickets if they get stuck while making their project. The tickets get answered in real-time as mentors at the event will find hackers based on the location they attached to their ticket, and provide the assistance the hackers need. It's also a spiritual successor to "),a(i,{to:"https://github.com/ehzhang/HELPq"},{default:o(()=>[t("HELPq")]),_:1}),t(".")]),F,V,e("p",U,[a(i,{to:"https://github.com/tamuhack-org/helpR"},{default:o(()=>[t("HelpR on GitHub")]),_:1})]),e("p",q,[a(i,{to:"https://github.com/tamuhack-org/helpr-frontend"},{default:o(()=>[t("HelpR Frontend on GitHub")]),_:1})])]),_:1}),a(l,{title:"Compara2r",timeframe:"3 March 2022 - 10 May 2022",languages:"HTML, CSS, JavaScript",technologies:"Node.js, Express, PostgreSQL, TailwindCSS","image-link":"/images/projects/compara2r.png","image-alt":"A Compara2r prompt"},{default:o(()=>[$,B,e("p",Q,[a(i,{to:s(n).socials.github.link+"/Compara2r"},{default:o(()=>[t("Compara2r on GitHub")]),_:1},8,["to"])])]),_:1}),a(l,{title:"recommends",timeframe:"25 December 2021 - 4 January 2022",languages:"Python, HTML, CSS, JavaScript",technologies:"Flask, Jinja, SQLite, PyNaCl","image-link":"/images/projects/recommends.png","image-alt":"A user's page on recommends"},{default:o(()=>[e("p",null,[t("A social media site where users can recommend books, movies, etc. to their friends. "),a(i,{to:"https://prydt.xyz/"},{default:o(()=>[t("Pry")]),_:1}),t(" and I made this in a couple days using Flask, Jinja, SQLite, PyNaCl, and the usual HTML/CSS/JavaScript shebang. I mainly worked on the frontend and pry worked on the login and database stuff. Overall, I'm pretty happy with how this turned out. It's quite minimal, but I feel like it has a lot of potential if we were ever to come back and polish/expand/deploy it.")]),e("p",Y,[a(i,{to:"https://github.com/prydt/recommends"},{default:o(()=>[t("recommends on GitHub")]),_:1})])]),_:1}),a(l,{title:"overthere",timeframe:"19 December 2021 - 24 December 2021",languages:"Python, HTML, CSS, JavaScript",technologies:"Flask, SQLite","image-link":"/images/projects/overthere.png","image-alt":"The interface of overthere"},{default:o(()=>[X,e("p",null,[t('overthere is bit.ly/tinyurl clone-ish that lets you post multiple links on one page. It also has fun, memorable URLs like "exquisite-cow"\u2014a feature inspired by '),a(i,{to:"https://magic-wormhole.readthedocs.io/"},{default:o(()=>[t("Magic-Wormhole")]),_:1}),t(".")]),e("p",K,[a(i,{to:s(n).socials.github.link+"/overthere"},{default:o(()=>[t("overthere on GitHub")]),_:1},8,["to"])])]),_:1}),a(l,{title:"Supremely_Hexagonal",timeframe:"28 October 2021 - 1 November 2021",languages:"Java",technologies:"Processing","image-link":"/images/projects/supremely_hexagonal_gameplay.gif","image-alt":"Gameplay from Supremely_Hexagonal"},{default:o(()=>[e("p",null,[t("Supremely_Hexagonal is a simplistic remake of "),a(i,{to:"https://superhexagon.com/"},{default:o(()=>[t("Super Hexagon")]),_:1}),t(" by Terry Cavanagh in Processing. I actually make "),a(i,{to:"https://drive.google.com/drive/folders/1ybSnsOlCGJLBSq4J3zse6883kvYxB3lb?usp=sharing"},{default:o(()=>[t(" a LOT of stuff for fun")]),_:1}),t(" in "),a(i,{to:"https://processing.org/"},{default:o(()=>[t("Processing")]),_:1}),t(" but I don't post it on GitHub because most of it isn't exactly useful software lol.")]),Z,ee,e("p",te,[a(i,{to:s(n).socials.github.link+"/Supremely_Hexagonal"},{default:o(()=>[t("Supremely_Hexagonal on GitHub")]),_:1},8,["to"])])]),_:1}),a(l,{title:"Peekaboo",timeframe:"1 October 2021 - 21 October 2021",languages:"Java"},{default:o(()=>[ae,e("p",oe,[a(i,{to:s(n).socials.github.link+"/Peekaboo"},{default:o(()=>[t("Peekaboo on GitHub")]),_:1},8,["to"])])]),_:1}),a(l,{title:"Peekaboo",timeframe:"26 July 2021 - 16 August 2021",languages:"C#",technologies:"Windows Forms, VEGAS Pro Script API","image-link":"/images/projects/oscillator_randomizer_gui.png","image-alt":"The GUI of my plugin VEGAS_Oscillator_Randomizer"},{default:o(()=>[ie,se,ne,e("p",le,[a(i,{to:s(n).socials.github.link+"/Vegas-Scripts#readme"},{default:o(()=>[t("VEGAS_Scripts on GitHub")]),_:1},8,["to"])])]),_:1}),a(l,{title:"nitroguy10.github.io",timeframe:"11 December 2016 - Ongoing (TODO sunset date hehe)",languages:"Python, HTML, Sass, JavaScript",technologies:"Jinja"},{default:o(()=>[re,e("p",he,[a(i,{to:"/articles/about_website.html"},{default:o(()=>[t("How This Website Was Made, A Story")]),_:1})])]),_:1}),a(l,{title:"ERS-OL",timeframe:"24 June 2021 - 3 July 2021",languages:"Python, HTML, CSS, JavaScript",technologies:"Flask, Socket.io","image-link":"/images/projects/ers-ol.png","image-alt":"Egyptian Rat Screw Online"},{default:o(()=>[ce,ue,de,me,e("p",pe,[a(i,{to:s(n).socials.github.link+"/ERS-OL"},{default:o(()=>[t("ERS-OL on GitHub")]),_:1},8,["to"])])]),_:1}),a(l,{title:"ColorSplitter",timeframe:"28 June 2021 - 29 June 2021",languages:"Java",technologies:"Swing","image-link":"/images/projects/colorsplitter.png","image-alt":"The GUI of ColorSplitter"},{default:o(()=>[ge,e("p",fe,[a(i,{to:s(n).socials.github.link+"/ColorSplitter"},{default:o(()=>[t("ColorSplitter on GitHub")]),_:1},8,["to"])])]),_:1}),a(l,{title:"DocLCD",timeframe:"2 June 2021 - 4 June 2021",languages:"Python, Arduino",technologies:"PySerial, Pygame"},{default:o(()=>[ye,e("p",_e,[a(i,{to:s(n).socials.github.link+"/DocLCD"},{default:o(()=>[t("DocLCD on GitHub")]),_:1},8,["to"])])]),_:1}),a(l,{title:"TimeRefresher",timeframe:"2 June 2021",languages:"Java",technologies:"Swing","image-link":"/images/projects/timerefresher.png","image-alt":"The GUI of TimeRefresher"},{default:o(()=>[be,e("p",we,[a(i,{to:s(n).socials.github.link+"/TimeRefresher"},{default:o(()=>[t("TimeRefresher on GitHub")]),_:1},8,["to"])])]),_:1}),a(l,{title:"RoundUp",timeframe:"7 May 2021 - 23 May 2021",languages:"Python","image-link":"/images/projects/roundup_visual.png","image-alt":"A visual of what RoundUp does"},{default:o(()=>[e("p",null,[t("RoundUp is a single Python script that copies all files from a directory tree into a single folder. The "),a(i,{to:s(n).socials.github.link+"/RoundUp#readme"},{default:o(()=>[t("README")]),_:1},8,["to"]),t(" does a better job of explaining this so check it out if you're interested. Just like with TimeRefresher, I created this to automate a process I often have had to do manually. Specifically, to deal with photos that were automatically organized into folders by programs against my will.")]),e("p",ke,[a(i,{to:s(n).socials.github.link+"/RoundUp"},{default:o(()=>[t("RoundUp on GitHub")]),_:1},8,["to"])])]),_:1}),a(l,{title:"tuscon",timeframe:"21 March - 9 April 2021",languages:"Python",technologies:"BeautifulSoup"},{default:o(()=>[e("p",null,[t("tuscon (yes, you read that right, that really is the name) is a super-simple web-templating library. All it is is HTML files with parameters, if statements, and for loops. I talk about my (unfortunate) reason for creating tuscon in that "),a(i,{to:"/articles/about_website.html"},{default:o(()=>[t("old article about my website")]),_:1}),t(".")]),e("p",ve,[a(i,{to:s(n).socials.github.link+"/tuscon"},{default:o(()=>[t("tuscon on GitHub")]),_:1},8,["to"])])]),_:1}),a(l,{title:"fructose",timeframe:"19 June 2020",languages:"Python, HTML, CSS, JavaScript",technologies:"Flask, SQLite","image-link":"/images/projects/fructose.png","image-alt":"The fructose homepage"},{default:o(()=>[Ie,e("p",null,[t("This is another one-day project made by "),a(i,{to:"https://prydt.xyz/"},{default:o(()=>[t("prydt")]),_:1}),t(' and myself. You could call it a "sequel" to docbox. Making these two were super fun and I definitely learned a lot in the process. They were like mini self-run hackathons!')]),e("p",Se,[a(i,{to:"https://github.com/woke-oats/fructose"},{default:o(()=>[t("fructose on GitHub")]),_:1})])]),_:1}),a(l,{title:"docbox",timeframe:"13 June 2020",languages:"Python, HTML, CSS, JavaScript",technologies:"Flask, SQLite","image-link":"/images/projects/docbox.png","image-alt":"The docbox homepage"},{default:o(()=>[Te,e("p",null,[a(i,{to:"https://prydt.xyz/"},{default:o(()=>[t("prydt")]),_:1}),t(" and I made this in one day during the 2020 COVID lockdown. This was my first experience working on a full-stack web app, albeit a simple one.")]),e("p",He,[a(i,{to:"https://github.com/woke-oats/docbox"},{default:o(()=>[t("docbox on GitHub")]),_:1})])]),_:1}),a(l,{title:"Pi555",timeframe:"ca. 2016 - 22 December 2019",languages:"Java",technologies:"MIDICSV, Pi4J, Raspberry Pi GPIO"},{default:o(()=>[je,e("p",null,[t("...okay so I can't exactly "),Ce,t(" it to you but I guess I can describe what it is. So, a "),a(i,{href:"https://en.wikipedia.org/wiki/555_timer_IC"},{default:o(()=>[t("555 timer")]),_:1}),t(" is a chip that can be used to generate a square wave at a given frequency. With the right configuration, you can get it to play a tone on a speaker. My goal for this project was to play music using the tone generated by the 555 timer. The way you'd change the pitch of the tone is by changing the resistance between two of the chip's pins and I used a digital potentiometer for this.")]),xe,Je]),_:1}),a(l,{title:"ClickType",timeframe:"6 May 2019 - 8 May 2019",languages:"HTML, CSS, JavaScript",technologies:"p5.js"},{default:o(()=>[Ae,e("p",Pe,[a(i,{to:s(n).socials.website.link+"/ClickType"},{default:o(()=>[t("ClickType")]),_:1},8,["to"])]),e("p",Le,[a(i,{to:s(n).socials.github.link+"/ClickType"},{default:o(()=>[t("ClickType on GitHub")]),_:1},8,["to"])])]),_:1}),a(l,{title:"ResistorTool",timeframe:"5 August 2018",languages:"HTML, CSS, JavaScript",technologies:"Bootstrap"},{default:o(()=>[Ge,e("p",Re,[a(i,{to:s(n).socials.website.link+"/ResistorTool"},{default:o(()=>[t("ResistorTool")]),_:1},8,["to"])]),e("p",Me,[a(i,{to:s(n).socials.github.link+"/ResistorTool"},{default:o(()=>[t("ResistorTool on GitHub")]),_:1},8,["to"])])]),_:1}),a(l,{title:"RoboPlato 2000",timeframe:"ca. January 2018"},{default:o(()=>[Ee,e("p",De,[a(i,{to:"/articles/roboplato.html"},{default:o(()=>[t("The Essential Wisdom of RoboPlato 2000")]),_:1})])]),_:1}),a(l,{title:"Jumpy",timeframe:"17 April 2017 - 4 December 2018",languages:"HTML, CSS, JavaScript","image-link":"/images/projects/jumpy.gif","image-alt":"A gif of Jumpy gameplay"},{default:o(()=>[Oe,ze,Ne,e("p",We,[a(i,{to:s(n).socials.website.link+"/Jumpy"},{default:o(()=>[t("Jumpy")]),_:1},8,["to"])]),e("p",Fe,[a(i,{to:s(n).socials.github.link+"/Jumpy"},{default:o(()=>[t("Jumpy on GitHub")]),_:1},8,["to"])])]),_:1}),a(l,{title:"Dodge3",timeframe:"18 March 2017 - 15 June 2017",languages:"HTML, CSS, JavaScript","image-link":"/images/projects/dodge3.gif","image-alt":"A gif of Dodge3 gameplay"},{default:o(()=>[e("p",null,[t("Another HTML5 canvas web game. This one's remarkably less ...remarkable than Jumpy. Just dodge the red rectangles. Not much else to say besides that this was my first big foray into JavaScript. Oh, and I made "),a(i,{to:s(n).socials.github.link+"/Dodge3/blob/master/music.mp3?raw=true"},{default:o(()=>[t("music")]),_:1},8,["to"]),t(" for this game that doesn't play anymore because of autoplay restrictions and poor implementation lol.")]),Ve,e("p",Ue,[a(i,{to:s(n).socials.website.link+"/Dodge3"},{default:o(()=>[t("Dodge3")]),_:1},8,["to"])]),e("p",qe,[a(i,{to:s(n).socials.github.link+"/Dodge3"},{default:o(()=>[t("Dodge3 on GitHub")]),_:1},8,["to"])])]),_:1}),a(l,{title:"CalcGames",timeframe:"5 January 2017 - 11 July 2017",languages:"TI-Basic","image-link":"/images/projects/serpent.gif","image-alt":"A gif of Serpent gameplay","image-2-link":"/images/projects/matrix.gif","image-2-alt":"A gif of Matrix Racer gameplay"},{default:o(()=>[e("p",null,[t("TI-Basic programming is a confusing mess that I absolutely love. There's a huge active community dedicated to programming for TI-84 calculators, and I decided to take part by making some of my own games. If you too want to waste your time programming for these calculators, it's super fun and I highly recommend learning if you're interested. Here's an "),a(i,{to:"http://tibasicdev.wikidot.com/starter-kit"},{default:o(()=>[t("awesome wiki")]),_:1}),t(" with tons of good information.")]),e("p",$e,[a(i,{to:s(n).socials.website.link+"/CalcGames"},{default:o(()=>[t("CalcGames")]),_:1},8,["to"])]),e("p",Be,[a(i,{to:s(n).socials.github.link+"/CalcGames"},{default:o(()=>[t("CalcGames on GitHub")]),_:1},8,["to"])])]),_:1})])}}});export{Xe as default};
